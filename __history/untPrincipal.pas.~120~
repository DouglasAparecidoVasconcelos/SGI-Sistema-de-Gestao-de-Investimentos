unit untPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.ComCtrls,DateUtils, Datasnap.DBClient,
  Vcl.Mask, Vcl.DBCtrls, System.IniFiles;

type
  TfrmPrincipal = class(TForm)
    procedure btnIncluirClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure btnAtualizarClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnFiltrarClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
  public
    { Public declarations }
    user,porta,ip,banco,senha : String;
    procedure lerIni();
  end;

var
  frmPrincipal: TfrmPrincipal;

implementation

{$R *.dfm}

uses untDmPrincipal;

procedure TfrmPrincipal.lerIni;
var
  arquivoIni : TIniFile;
begin
   {
  arquivoIni := TIniFile.Create(ExtractFilePath(Application.ExeName) + 'gestaoinvestimentos.ini');
  ip := arquivoIni.ReadString('CONEXAO','IP',ip);
  porta := arquivoIni.ReadString('CONEXAO','PORTA',porta);
  banco := arquivoIni.ReadString('CONEXAO','BANCO',banco);
  user := arquivoIni.ReadString('CONEXAO','USUARIO',user);
  senha := arquivoIni.ReadString('CONEXAO','SENHA',senha);
  arquivoIni.Free;
  }
end;



procedure TfrmPrincipal.btnAtualizarClick(Sender: TObject);
begin
  DmPrincipal.cdsControleFinanceiro.Refresh;
  btnFiltrarClick(Sender);
end;

procedure TfrmPrincipal.btnExcluirClick(Sender: TObject);
begin
  if Application.MessageBox('Tem certeza de que deseja EXCLUIR o movimento selecionado?','SGI - Sistema de Gestão de Investientos',MB_YESNOCANCEL+MB_ICONWARNING) = ID_YES then
  begin
    DmPrincipal.cdsControleFinanceiro.Delete;
    DmPrincipal.cdsControleFinanceiro.ApplyUpdates(0);
  end
  else
  begin
    Exit;
  end;

  
end;

procedure TfrmPrincipal.btnFiltrarClick(Sender: TObject);

begin
  filtraCds;
  pintaFonte(soma);
  lblSoma.Caption := FloatToStr(soma);
end;

procedure TfrmPrincipal.btnIncluirClick(Sender: TObject);
begin
  DmPrincipal.cdsControleFinanceiro.insert;
  controlaBotoes;
  DBEdit1.SetFocus;
end;

procedure TfrmPrincipal.btnSalvarClick(Sender: TObject);
begin

  try
    if StrToFloat(DmPrincipal.cdsControleFinanceiro.FieldByName('Valor').AsString) > 1 then
    begin
      DmPrincipal.cdsControleFinanceiroTIPO.AsString := 'R';
    end
    else
    begin
      DmPrincipal.cdsControleFinanceiroTIPO.AsString := 'D';
    end;

    DmPrincipal.cdsControleFinanceiro.Post;
    DmPrincipal.cdsControleFinanceiro.ApplyUpdates(0);
    DmPrincipal.cdsControleFinanceiro.Refresh;
    controlaBotoes;
    btnAtualizarClick(Sender);

    ShowMessage('Movimento cadatrado com Sucesso!');
  except
    ShowMessage('Erro ao cadastrar movimento');
  end;
end;

procedure TfrmPrincipal.btnCancelarClick(Sender: TObject);
begin
  DmPrincipal.cdsControleFinanceiro.Cancel;
  DmPrincipal.cdsControleFinanceiro.CancelUpdates;
  controlaBotoes;
end;

procedure TfrmPrincipal.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  DmPrincipal.FDConnection1.Close;
  DmPrincipal := Nil;
  Action := caFree;
end;

end.
